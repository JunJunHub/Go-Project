// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// SysLoginHistoryDao is the manager for logic model data accessing and custom defined data operations functions management.
type SysLoginHistoryDao struct {
	Table   string                 // Table is the underlying table name of the DAO.
	Group   string                 // Group is the database configuration group name of current DAO.
	Columns SysLoginHistoryColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// SysLoginHistoryColumns defines and stores column names for table sys_login_history.
type SysLoginHistoryColumns struct {
	InfoId        string // 访问id
	LoginName     string // 登录账号
	Ipaddr        string // 登录ip地址
	LoginLocation string // 登录地点
	Browser       string // 浏览器类型
	Os            string // 操作系统
	Status        string // 登录状态（0成功 其他错误代码）
	Msg           string // 提示消息
	LoginTime     string // 访问时间
}

//  sysLoginHistoryColumns holds the columns for table sys_login_history.
var sysLoginHistoryColumns = SysLoginHistoryColumns{
	InfoId:        "info_id",
	LoginName:     "login_name",
	Ipaddr:        "ipaddr",
	LoginLocation: "login_location",
	Browser:       "browser",
	Os:            "os",
	Status:        "status",
	Msg:           "msg",
	LoginTime:     "login_time",
}

// NewSysLoginHistoryDao creates and returns a new DAO object for table data access.
func NewSysLoginHistoryDao() *SysLoginHistoryDao {
	return &SysLoginHistoryDao{
		Group:   "default",
		Table:   "sys_login_history",
		Columns: sysLoginHistoryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysLoginHistoryDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysLoginHistoryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysLoginHistoryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
